
name: Deploy Prod
on:
  push:
    tags: [ 'v*' ]

env:
  REGION: europe-west1
  PROJECT_ID: your-gcp-project
  REPO: twin-repo
  IMAGE: twin-rag
  TF_DIR: gcp/terraform

jobs:
  deploy:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Auth to GCP (OIDC)
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/123456789/locations/global/workloadIdentityPools/github/providers/github
          service_account: gha-deployer@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build & Push RAG image (prod tag)
        run: |
          docker build -f docker/Dockerfile.rag -t $REGION-docker.pkg.dev/$PROJECT_ID/$REPO/$IMAGE:${GITHUB_REF_NAME} .
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$REPO/$IMAGE:${GITHUB_REF_NAME}

      - uses: hashicorp/setup-terraform@v3
      - name: Terraform Init/Apply (prod)
        working-directory: ${{ env.TF_DIR }}
        env:
          TF_VAR_project_id: ${{ env.PROJECT_ID }}
          TF_VAR_region: ${{ env.REGION }}
          TF_VAR_neo4j_uri: ${{ secrets.NEO4J_URI_PROD }}
          TF_VAR_neo4j_user: ${{ secrets.NEO4J_USER_PROD }}
          TF_VAR_neo4j_password: ${{ secrets.NEO4J_PASSWORD_PROD }}
          TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY_PROD }}
        run: |
          terraform init
          terraform apply -auto-approve
